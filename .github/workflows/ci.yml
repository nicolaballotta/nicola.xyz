name: nicola.xyz CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

#2
env:
  REGISTRY: "registry.digitalocean.com/kubelab"
  IMAGE: "nicolaxyz"

#3
jobs:
  build-push:

    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout website source
      id: checkout-master
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    
    - name: Generate build ID
      id: prep
      run: |
          branch=${GITHUB_REF##*/}
          sha=${GITHUB_SHA::8}
          ts=$(date +%s)
          echo "::set-output name=BUILD_ID::${branch}-${sha}-${ts}"          

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 600

    - name: Remove all old images
      run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE) $(doctl registry repository list-tags $(echo $IMAGE) | grep -o "sha.*") --force; else echo "No repository"; fi

    - name: Build and publish container image with tag
      uses: docker/build-push-action@v2
      with:
        push: true
        context: .
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ steps.prep.outputs.BUILD_ID }}
    
    - name: Run garbage collection on Digital DigitalOcean
      run: doctl registry garbage-collection start -f